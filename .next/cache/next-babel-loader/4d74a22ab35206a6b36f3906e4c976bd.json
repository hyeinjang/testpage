{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/hi/project/test/components/view/Style.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Form, Input, Button, Checkbox, Avatar, message } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nvar layout = {\n  wrapperCol: {\n    span: 16\n  }\n};\nvar tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nvar StyleView = function StyleView() {\n  var onFinish = function onFinish(values) {\n    console.log('Success:', values);\n\n    var error = function error() {\n      message.error('회원가입이 완료되었습니다.', 1);\n    };\n\n    error();\n  };\n\n  var onFinishFailed = function onFinishFailed(errorInfo) {// console.log('Failed:', errorInfo);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Css Testboard!\"), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      marginLeft: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Primary Button\"), __jsx(Avatar, {\n    size: 64,\n    icon: __jsx(UserOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(Form, _extends({\n    style: {\n      maxWidth: 300\n    }\n  }, layout, {\n    name: \"basic\",\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(Form.Item, {\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }, {\n      type: 'email',\n      message: 'e-mail 형식으로 작성해주세요.'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Input, {\n    placeholder: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Input.Password, {\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(Form.Item, {\n    name: \"passwordComfirm\",\n    dependencies: ['password'],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, function (_ref) {\n      var getFieldValue = _ref.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n      };\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Input.Password, {\n    placeholder: \"password again\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), __jsx(Form.Item, _extends({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Submit\"))), __jsx(\"div\", {\n    className: \"display-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"left\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"right\")));\n};\n\nexport default StyleView;","map":{"version":3,"sources":["/Users/hi/project/test/components/view/Style.js"],"names":["React","Form","Input","Button","Checkbox","Avatar","message","UserOutlined","layout","wrapperCol","span","tailLayout","offset","StyleView","onFinish","values","console","log","error","onFinishFailed","errorInfo","marginLeft","maxWidth","required","type","getFieldValue","validator","rule","value","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button, Checkbox, Avatar, message } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst layout = {\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\n\nconst StyleView = () => {\n\n    const onFinish = values => {\n        console.log('Success:', values);\n\n\n        const error = () => {\n            message.error('회원가입이 완료되었습니다.', 1);\n        };\n        error();\n\n    };\n\n    const onFinishFailed = errorInfo => {\n        // console.log('Failed:', errorInfo);\n    };\n\n\n  return (\n    <>\n      <h1>Css Testboard!</h1>\n        <hr />\n        <Button type=\"primary\" style={{ marginLeft: 8 }}>\n            Primary Button\n        </Button>\n        <Avatar size={64} icon={<UserOutlined/>}/>\n\n        <Form\n            style={{maxWidth: 300}}\n            {...layout}\n            name=\"basic\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                name=\"email\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your username!',\n                    },\n                    {\n                        type: 'email',\n                        message: 'e-mail 형식으로 작성해주세요.'\n                    }\n                ]}\n            >\n                <Input placeholder={\"username\"}/>\n            </Form.Item>\n\n            <Form.Item\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                ]}\n            >\n                <Input.Password placeholder={\"password\"}/>\n            </Form.Item>\n            <Form.Item\n                name=\"passwordComfirm\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({ getFieldValue }) => ({\n                        validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject('The two passwords that you entered do not match!');\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password placeholder={\"password again\"}/>\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n\n\n        <div className={\"display-flex\"}>\n            <span>left</span>\n            <span>right</span>\n        </div>\n    </>\n  );\n};\n\nexport default StyleView;\n"]},"metadata":{},"sourceType":"module"}